{"ast":null,"code":"var _jsxFileName = \"/projects/library-app/client/src/components/BookTileComponent.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport './css/booktile.css';\nimport { updateBookItem as _updateBookItem, setUpdateFormVisibility as _setUpdateFormVisibility, setUpdateItem as _setUpdateItem } from '../actions';\nimport AddEditFormComponent from './AddEditFormComponent';\n\nvar BookTileComponent = function BookTileComponent(props) {\n  var blurEffect = props.updateFormVisibility ? {\n    filter: \"blur(5px)\",\n    pointerEvents: \"none\"\n  } : {};\n  var availIndStyle = null;\n  props.bookItem.availabiltyInd === \"IN\" ? availIndStyle = {\n    backgroundColor: \"green\"\n  } : availIndStyle = {\n    backgroundColor: \"red\"\n  };\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"todotile\",\n    style: blurEffect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"tileContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    className: \"tileText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, props.bookItem.bookName), React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Author: \", props.bookItem.bookAuthor), React.createElement(\"p\", {\n    title: props.bookItem.desc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Desc:\", props.bookItem.bookDesc)), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: \"inline-flex\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"yearOfRel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, props.bookItem.yearOfRelease), React.createElement(\"span\", {\n    className: \"todooperation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"button\",\n    className: \"editbutton\",\n    onClick: function onClick(e) {\n      props.setUpdateItem(props.bookItem);\n      console.log(\"mybookitem\", props.bookItem);\n      props.setUpdateFormVisibility(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"availbilityInd\",\n    style: availIndStyle,\n    title: props.bookItem.availabiltyInd,\n    onClick: function onClick(e) {\n      if (props.bookItem.availabiltyInd === \"IN\") {\n        console.log(\"green\");\n        props.bookItem.availabiltyInd = \"OUT\";\n        availIndStyle = {\n          backgroundColor: \"red\"\n        };\n      } else {\n        props.bookItem.availabiltyInd = \"IN\";\n        availIndStyle = {\n          backgroundColor: \"green\"\n        };\n        console.log(\"green\");\n      }\n\n      props.updateBookItem(props.bookItem);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, props.bookItem.availabiltyInd))))), props.updateFormVisibility ? React.createElement(AddEditFormComponent, {\n    bookItem: props.updateItem,\n    updateBookItem: props.updateBookItem,\n    setFormVisibility: props.setUpdateFormVisibility,\n    formType: \"EDIT\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }) : false);\n};\n\nfunction mapDispatchToProps(dispatch, ownProps) {\n  return {\n    setUpdateItem: function setUpdateItem(bookObj) {\n      dispatch(_setUpdateItem(bookObj));\n    },\n    setUpdateFormVisibility: function setUpdateFormVisibility(visibilityInd) {\n      dispatch(_setUpdateFormVisibility(visibilityInd));\n    },\n    updateBookItem: function updateBookItem(bookObj) {\n      dispatch(_updateBookItem(bookObj));\n    }\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    updateFormVisibility: state.updateFormVisibility,\n    updateItem: state.updateItem\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookTileComponent);","map":{"version":3,"sources":["/projects/library-app/client/src/components/BookTileComponent.js"],"names":["React","connect","updateBookItem","setUpdateFormVisibility","setUpdateItem","AddEditFormComponent","BookTileComponent","props","blurEffect","updateFormVisibility","filter","pointerEvents","availIndStyle","bookItem","availabiltyInd","backgroundColor","bookName","bookAuthor","desc","bookDesc","display","yearOfRelease","e","console","log","updateItem","mapDispatchToProps","dispatch","ownProps","bookObj","visibilityInd","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport './css/booktile.css';\r\nimport {updateBookItem, setUpdateFormVisibility, setUpdateItem} from '../actions';\r\nimport AddEditFormComponent from './AddEditFormComponent';\r\n\r\nconst BookTileComponent = (props) => {\r\n    let blurEffect= props.updateFormVisibility ? {filter: \"blur(5px)\", pointerEvents:\"none\"} : {}\r\n    let availIndStyle=null;\r\n    props.bookItem.availabiltyInd===\"IN\" ?  availIndStyle = {backgroundColor:\"green\"} : availIndStyle={backgroundColor:\"red\"}\r\n    return(\r\n        <React.Fragment>\r\n           <div className=\"todotile\" style={blurEffect}>\r\n                \r\n                <div className=\"tileContent\">\r\n                    <h6 className=\"tileText\">{props.bookItem.bookName}</h6>\r\n                    <i>Author: {props.bookItem.bookAuthor}</i>\r\n                    <p title={props.bookItem.desc}><i>Desc:{props.bookItem.bookDesc}</i></p>\r\n                    <hr/>\r\n                    <div style={{display:\"inline-flex\"}}>\r\n                        <p className=\"yearOfRel\">{props.bookItem.yearOfRelease}</p>\r\n                        <span className=\"todooperation\">\r\n                            <input type=\"button\" className=\"editbutton\" \r\n                            onClick={(e)=>{\r\n                                props.setUpdateItem(props.bookItem)\r\n                                console.log(\"mybookitem\", props.bookItem);\r\n                                props.setUpdateFormVisibility(true)\r\n                            }}/>\r\n                            <button className=\"availbilityInd\" \r\n                                style={availIndStyle} \r\n                                title={props.bookItem.availabiltyInd}\r\n                                onClick={(e)=>{\r\n                                    \r\n                                    if(props.bookItem.availabiltyInd===\"IN\"){\r\n                                        console.log(\"green\")\r\n                                        props.bookItem.availabiltyInd=\"OUT\"\r\n                                        availIndStyle={backgroundColor:\"red\"}\r\n                                    }\r\n                                    else{\r\n                                        props.bookItem.availabiltyInd=\"IN\"\r\n                                        availIndStyle = {backgroundColor:\"green\"}\r\n                                        console.log(\"green\")\r\n                                    }\r\n                                    props.updateBookItem(props.bookItem)\r\n                                }}>{props.bookItem.availabiltyInd}</button>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n           </div>\r\n            \r\n            {props.updateFormVisibility ? \r\n                <AddEditFormComponent bookItem={props.updateItem} \r\n                                      updateBookItem={props.updateBookItem} \r\n                                      setFormVisibility={props.setUpdateFormVisibility}\r\n                                      formType=\"EDIT\"\r\n                                      />: false\r\n            }\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nfunction mapDispatchToProps(dispatch, ownProps){\r\n    return{\r\n        setUpdateItem: (bookObj) => {\r\n            dispatch(setUpdateItem(bookObj))\r\n        },\r\n        setUpdateFormVisibility: (visibilityInd) => {\r\n            dispatch(setUpdateFormVisibility(visibilityInd))\r\n        },updateBookItem: (bookObj) => {\r\n            dispatch(updateBookItem(bookObj))\r\n        },\r\n        \r\n    }    \r\n}\r\n\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        updateFormVisibility:state.updateFormVisibility,\r\n        updateItem:state.updateItem\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (BookTileComponent);"]},"metadata":{},"sourceType":"module"}