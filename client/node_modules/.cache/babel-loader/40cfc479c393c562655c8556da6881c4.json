{"ast":null,"code":"var _jsxFileName = \"/projects/library-app/client/src/components/BookTileComponent.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport './css/booktile.css';\nimport { updateBookItem as _updateBookItem, setUpdateFormVisibility as _setUpdateFormVisibility, setUpdateItem as _setUpdateItem } from '../actions';\nimport AddEditFormComponent from './AddEditFormComponent';\n\nvar BookTileComponent = function BookTileComponent(props) {\n  var blurEffect = props.updateFormVisibility ? {\n    filter: \"blur(5px)\",\n    pointerEvents: \"none\"\n  } : {};\n  var bookItem = props.bookItem;\n  var availIndStyle = bookItem.availabiltyInd === \"IN\" ? {\n    backgroundColor: \"green\"\n  } : {\n    backgroundColor: \"red\"\n  };\n  blurEffect = props.updateFormVisibility ? {\n    filter: \"blur(0px)\",\n    pointerEvents: \"none\"\n  } : {};\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"todotile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"tileContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    className: \"tileText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, bookItem.bookName), React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Author: \", bookItem.bookAuthor), React.createElement(\"p\", {\n    title: props.bookItem.desc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Desc:\", bookItem.bookDesc)), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: \"inline-flex\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"yearOfRel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, bookItem.yearOfRelease), React.createElement(\"span\", {\n    className: \"todooperation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"button\",\n    className: \"editbutton\",\n    onClick: function onClick(e) {\n      props.setUpdateItem(bookItem);\n      console.log(\"mybookitem\", bookItem);\n      props.setUpdateFormVisibility(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"availbilityInd\",\n    type: \"button\",\n    style: availIndStyle,\n    title: bookItem.availabiltyInd,\n    onClick: function onClick(e) {\n      return handleAvailability(e, bookItem, props);\n    },\n    defaultValue: bookItem.availabiltyInd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }))))), props.updateFormVisibility ? React.createElement(AddEditFormComponent, {\n    bookItem: props.updateItem,\n    updateBookItem: props.updateBookItem,\n    setFormVisibility: props.setUpdateFormVisibility,\n    formType: \"EDIT\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }) : false);\n};\n\nvar handleAvailability = function handleAvailability(e, bookItem, props) {\n  e.preventDefault();\n\n  if (bookItem.availabiltyInd === \"OUT\") {\n    bookItem.availabiltyInd = \"IN\";\n    e.target.style.background = \"green\";\n    e.target.value = \"IN\";\n  } else {\n    bookItem.availabiltyInd = \"OUT\";\n    e.target.style.background = \"red\";\n    e.target.value = \"OUT\";\n  }\n\n  props.updateBookItem(bookItem);\n};\n\nfunction mapDispatchToProps(dispatch, ownProps) {\n  return {\n    setUpdateItem: function setUpdateItem(bookObj) {\n      dispatch(_setUpdateItem(bookObj));\n    },\n    setUpdateFormVisibility: function setUpdateFormVisibility(visibilityInd) {\n      dispatch(_setUpdateFormVisibility(visibilityInd));\n    },\n    updateBookItem: function updateBookItem(bookObj) {\n      dispatch(_updateBookItem(bookObj));\n    }\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    updateFormVisibility: state.updateFormVisibility,\n    updateItem: state.updateItem\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookTileComponent);","map":{"version":3,"sources":["/projects/library-app/client/src/components/BookTileComponent.js"],"names":["React","connect","updateBookItem","setUpdateFormVisibility","setUpdateItem","AddEditFormComponent","BookTileComponent","props","blurEffect","updateFormVisibility","filter","pointerEvents","bookItem","availIndStyle","availabiltyInd","backgroundColor","bookName","bookAuthor","desc","bookDesc","display","yearOfRelease","e","console","log","handleAvailability","updateItem","preventDefault","target","style","background","value","mapDispatchToProps","dispatch","ownProps","bookObj","visibilityInd","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport './css/booktile.css';\r\nimport {updateBookItem, setUpdateFormVisibility, setUpdateItem} from '../actions';\r\nimport AddEditFormComponent from './AddEditFormComponent';\r\n\r\nconst BookTileComponent = (props) => {\r\n    let blurEffect= props.updateFormVisibility ? {filter: \"blur(5px)\", pointerEvents:\"none\"} : {}\r\n    let bookItem = props.bookItem\r\n    let availIndStyle= bookItem.availabiltyInd===\"IN\" ?  {backgroundColor:\"green\"} : {backgroundColor:\"red\"}\r\n    blurEffect= props.updateFormVisibility ? {filter: \"blur(0px)\", pointerEvents:\"none\"} : {}\r\n    return(\r\n        <React.Fragment>\r\n           <div className=\"todotile\">\r\n                <div className=\"tileContent\">\r\n                    <h6 className=\"tileText\">{bookItem.bookName}</h6>\r\n                    <i>Author: {bookItem.bookAuthor}</i>\r\n                    <p title={props.bookItem.desc}><i>Desc:{bookItem.bookDesc}</i></p>\r\n                    <hr/>\r\n                    <div style={{display:\"inline-flex\"}}>\r\n                        <p className=\"yearOfRel\">{bookItem.yearOfRelease}</p>\r\n                        <span className=\"todooperation\">\r\n                            <input type=\"button\" className=\"editbutton\" \r\n                            onClick={(e)=>{\r\n                                props.setUpdateItem(bookItem)\r\n                                console.log(\"mybookitem\", bookItem);\r\n                                props.setUpdateFormVisibility(true)\r\n                            }}/>\r\n                            <input className=\"availbilityInd\"\r\n                                type=\"button\"\r\n                                style={availIndStyle} \r\n                                title={bookItem.availabiltyInd}\r\n                                onClick={(e)=>handleAvailability(e, bookItem, props)} defaultValue={bookItem.availabiltyInd} />\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n           </div>\r\n            \r\n            {props.updateFormVisibility ? \r\n                <AddEditFormComponent \r\n                bookItem={props.updateItem} \r\n                                      updateBookItem={props.updateBookItem} \r\n                                      setFormVisibility={props.setUpdateFormVisibility}\r\n                                      formType=\"EDIT\"\r\n                                      />: false\r\n            }\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst handleAvailability = (e, bookItem, props) =>{\r\n    e.preventDefault();\r\n    if(bookItem.availabiltyInd===\"OUT\"){\r\n        bookItem.availabiltyInd=\"IN\"\r\n        e.target.style.background=\"green\"\r\n        e.target.value=\"IN\"\r\n    }\r\n    else{\r\n        bookItem.availabiltyInd=\"OUT\"\r\n        e.target.style.background=\"red\"\r\n        e.target.value=\"OUT\"\r\n    }\r\n    props.updateBookItem(bookItem)\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch, ownProps){\r\n    return{\r\n        setUpdateItem: (bookObj) => {\r\n            dispatch(setUpdateItem(bookObj))\r\n        },\r\n        setUpdateFormVisibility: (visibilityInd) => {\r\n            dispatch(setUpdateFormVisibility(visibilityInd))\r\n        },updateBookItem: (bookObj) => {\r\n            dispatch(updateBookItem(bookObj))\r\n        },\r\n        \r\n    }    \r\n}\r\n\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        updateFormVisibility:state.updateFormVisibility,\r\n        updateItem:state.updateItem,\r\n        \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (BookTileComponent);"]},"metadata":{},"sourceType":"module"}