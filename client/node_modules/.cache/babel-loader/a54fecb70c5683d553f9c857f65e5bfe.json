{"ast":null,"code":"import _objectSpread from \"/projects/library-app/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { ADD_BOOK, SEARCH_BOOK, SHOW_ADD_FORM, SHOW_UPDATE_FORM, UPDATE_BOOK_ITEM, SET_UPDATE_ITEM } from '../constants';\nvar initialState = {\n  bookList: [{\n    id: Math.random(),\n    bookName: \"Theory of Computation\",\n    bookAuthor: \"James\",\n    yearOfRelease: \"2018-11-11\"\n  }, {\n    id: Math.random(),\n    bookName: \"James Bond\",\n    bookAuthor: \"Andrew\",\n    yearOfRelease: \"2018-11-11\"\n  }, {\n    id: Math.random(),\n    bookName: \"Santa claus\",\n    bookAuthor: \"James\",\n    yearOfRelease: \"2018-11-11\"\n  }, {\n    id: Math.random(),\n    bookName: \"Santa claus\",\n    bookAuthor: \"James\",\n    yearOfRelease: \"2018-11-11\"\n  }],\n  search: \"\",\n  addFormVisibility: false,\n  updateFormVisibility: false,\n  updateItem: {}\n};\nexport var reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_BOOK:\n      {\n        console.log(action.type, action.payload);\n        var bookItem = action.payload;\n        var bookList = state.bookList;\n        var newBookList = bookList.concat(bookItem);\n        return _objectSpread({}, state, {\n          bookList: newBookList\n        });\n      }\n\n    case SHOW_ADD_FORM:\n      console.log(action.type, action.payload);\n      return _objectSpread({}, state, {\n        addFormVisibility: action.payload\n      });\n\n    case SHOW_UPDATE_FORM:\n      console.log(action.type, action.payload);\n      return _objectSpread({}, state, {\n        updateFormVisibility: action.payload\n      });\n\n    case UPDATE_BOOK_ITEM:\n      {\n        console.log(action.type, action.payload);\n        var _bookList = state.bookList;\n        var bookObj = action.payload;\n        console.log(\"list\", _bookList);\n\n        var _newBookList = _bookList.map(function (bookItem) {\n          if (bookItem.id === bookObj.id) {\n            bookItem = bookObj;\n          }\n\n          return bookItem;\n        });\n\n        return _objectSpread({}, state, {\n          bookList: _newBookList\n        });\n      }\n\n    case SET_UPDATE_ITEM:\n      {\n        console.log(action.type, action.payload);\n        return _objectSpread({}, state, {\n          updateItem: action.payload\n        });\n      }\n\n    case SEARCH_BOOK:\n      console.log(state.bookList, state);\n      break;\n    //                            let newsearch = action.payload;\n    //                            const searchedBookList = state.bookList.filter(function(bookItem) {\n    //\t                           return bookItem.bookName.includes(newsearch);\n    //                            });\n    //                            state.search = newsearch;\n    //                            if(state.search.length < 1){\n    //                              return {...state}  \n    //                            } else {\n    //                              return {...state, search: newsearch, bookList: searchedBookList}\n    //                            }\n\n    default:\n      console.log(\"hello\");\n      return state;\n  }\n};","map":{"version":3,"sources":["/projects/library-app/client/src/reducers/index.js"],"names":["ADD_BOOK","SEARCH_BOOK","SHOW_ADD_FORM","SHOW_UPDATE_FORM","UPDATE_BOOK_ITEM","SET_UPDATE_ITEM","initialState","bookList","id","Math","random","bookName","bookAuthor","yearOfRelease","search","addFormVisibility","updateFormVisibility","updateItem","reducer","state","action","type","console","log","payload","bookItem","newBookList","concat","bookObj","map"],"mappings":"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","sourcesContent":["import { ADD_BOOK, SEARCH_BOOK, SHOW_ADD_FORM, SHOW_UPDATE_FORM, UPDATE_BOOK_ITEM, SET_UPDATE_ITEM } from '../constants'; \r\n\r\nconst initialState = {\r\n    bookList:[{\r\n      id:Math.random(), \r\n      bookName: \"Theory of Computation\",\r\n      bookAuthor:\"James\",\r\n      yearOfRelease:\"2018-11-11\"\r\n    },{\r\n      id:Math.random(), \r\n      bookName: \"James Bond\",\r\n      bookAuthor:\"Andrew\",\r\n      yearOfRelease:\"2018-11-11\",\r\n    },{\r\n      id:Math.random(), \r\n      bookName: \"Santa claus\",\r\n      bookAuthor:\"James\",\r\n      yearOfRelease:\"2018-11-11\"\r\n    },{\r\n      id:Math.random(), \r\n      bookName: \"Santa claus\",\r\n      bookAuthor:\"James\",\r\n      yearOfRelease:\"2018-11-11\"\r\n    }],\r\n    search:\"\",\r\n    addFormVisibility:false,\r\n    updateFormVisibility:false,\r\n    updateItem:{}\r\n}\r\n\r\nexport const reducer = (state=initialState,action) => {\r\n    switch(action.type){\r\n        case ADD_BOOK: { console.log(action.type, action.payload);\r\n                        let bookItem = action.payload;\r\n                        let { bookList } = state;\r\n                        const newBookList = bookList.concat(bookItem);\r\n                        return {...state, bookList: newBookList};\r\n                       }\r\n\r\n        case SHOW_ADD_FORM:    console.log(action.type, action.payload);\r\n                                    return{...state, addFormVisibility:action.payload }\r\n        case SHOW_UPDATE_FORM:    console.log(action.type, action.payload);\r\n                                    return{...state, updateFormVisibility:action.payload }\r\n                                    \r\n        case UPDATE_BOOK_ITEM:  { console.log(action.type, action.payload)\r\n                                    let {bookList} = state;\r\n                                    let bookObj = action.payload;\r\n                                    console.log(\"list\", bookList);\r\n                                    let newBookList = bookList.map((bookItem)=> {\r\n                                        if(bookItem.id===bookObj.id){bookItem=bookObj;}\r\n                                        return bookItem;\r\n                                    })\r\n                                    return{\r\n                                        ...state, bookList:newBookList\r\n                                    }\r\n                                }\r\n        case SET_UPDATE_ITEM : {console.log(action.type, action.payload);\r\n                                return{\r\n                                    ...state, updateItem:action.payload\r\n                                }\r\n                               }\r\n\r\n        case SEARCH_BOOK:   console.log(state.bookList, state);break;\r\n//                            let newsearch = action.payload;\r\n//                            const searchedBookList = state.bookList.filter(function(bookItem) {\r\n//\t                           return bookItem.bookName.includes(newsearch);\r\n//                            });\r\n//                            state.search = newsearch;\r\n//                            if(state.search.length < 1){\r\n//                              return {...state}  \r\n//                            } else {\r\n//                              return {...state, search: newsearch, bookList: searchedBookList}\r\n//                            }\r\n                            \r\n                            \r\n        default:console.log(\"hello\");return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}