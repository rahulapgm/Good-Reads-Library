{"ast":null,"code":"import _classCallCheck from \"/projects/library-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/projects/library-app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/projects/library-app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/projects/library-app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/projects/library-app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/projects/library-app/client/src/App.js\";\nimport React, { Component } from 'react';\nimport AddBookComponent from './components/AddBookComponent';\nimport BookGalleryComponent from './components/BookGalleryComponent';\nimport AddEditFormComponent from './components/AddEditFormComponent';\nimport { updateBookItem as _updateBookItem, setUpdateFormVisibility as _setUpdateFormVisibility, setUpdateItem as _setUpdateItem } from '../actions';\nimport { getBookList as _getBookList } from './actions';\nimport { connect } from 'react-redux';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getBookList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var blurEffect = this.props.showAddForm ? {\n        filter: \"blur(5px)\",\n        pointerEvents: \"none\"\n      } : {};\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Good Reads Library\"), React.createElement(AddBookComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: blurEffect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(BookGalleryComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      })), this.props.updateFormVisibility ? React.createElement(AddEditFormComponent, {\n        bookItem: this.props.updateItem,\n        updateBookItem: this.props.updateBookItem,\n        setFormVisibility: this.props.setUpdateFormVisibility,\n        formType: \"EDIT\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }) : false);\n    }\n  }]);\n\n  return App;\n}(Component);\n\nfunction mapDispatchToProps(dispatch, ownProps) {\n  return {\n    getBookList: function getBookList() {\n      dispatch(_getBookList());\n    },\n    setUpdateItem: function setUpdateItem(bookObj) {\n      dispatch(_setUpdateItem(bookObj));\n    },\n    setUpdateFormVisibility: function setUpdateFormVisibility(visibilityInd) {\n      dispatch(_setUpdateFormVisibility(visibilityInd));\n    },\n    updateBookItem: function updateBookItem(bookObj) {\n      dispatch(_updateBookItem(bookObj));\n    }\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    showAddForm: state.addFormVisibility,\n    updateFormVisibility: state.updateFormVisibility,\n    updateItem: state.updateItem\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/projects/library-app/client/src/App.js"],"names":["React","Component","AddBookComponent","BookGalleryComponent","AddEditFormComponent","updateBookItem","setUpdateFormVisibility","setUpdateItem","getBookList","connect","App","props","blurEffect","showAddForm","filter","pointerEvents","updateFormVisibility","updateItem","mapDispatchToProps","dispatch","ownProps","bookObj","visibilityInd","mapStateToProps","state","addFormVisibility"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,oBAAP,MAAiC,mCAAjC;AACA,OAAOC,oBAAP,MAAiC,mCAAjC;AACA,SAAQC,cAAc,IAAdA,eAAR,EAAwBC,uBAAuB,IAAvBA,wBAAxB,EAAiDC,aAAa,IAAbA,cAAjD,QAAqE,YAArE;AACA,SAASC,WAAW,IAAXA,YAAT,QAA4B,WAA5B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAO,WAAP;;IACMC,G;;;;;;;;;;;;;wCAEiB;AACf,WAAKC,KAAL,CAAWH,WAAX;AACH;;;6BAEQ;AACL,UAAII,UAAU,GAAE,KAAKD,KAAL,CAAWE,WAAX,GAAyB;AAACC,QAAAA,MAAM,EAAE,WAAT;AAAsBC,QAAAA,aAAa,EAAC;AAApC,OAAzB,GAAuE,EAAvF;AACA,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAK,QAAA,KAAK,EAAEH,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAHF,EAMG,KAAKD,KAAL,CAAWK,oBAAX,GACG,oBAAC,oBAAD;AAAsB,QAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWM,UAA3C;AACsB,QAAA,cAAc,EAAE,KAAKN,KAAL,CAAWN,cADjD;AAEsB,QAAA,iBAAiB,EAAE,KAAKM,KAAL,CAAWL,uBAFpD;AAGsB,QAAA,QAAQ,EAAC,MAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,GAK6B,KAXhC,CADF;AAgBD;;;;EAxBWL,S;;AA2BlB,SAASiB,kBAAT,CAA4BC,QAA5B,EAAsCC,QAAtC,EAA+C;AAC3C,SAAM;AACFZ,IAAAA,WAAW,EAAE,uBAAM;AACfW,MAAAA,QAAQ,CAACX,YAAW,EAAZ,CAAR;AACH,KAHC;AAIFD,IAAAA,aAAa,EAAE,uBAACc,OAAD,EAAa;AACxBF,MAAAA,QAAQ,CAACZ,cAAa,CAACc,OAAD,CAAd,CAAR;AACH,KANC;AAOFf,IAAAA,uBAAuB,EAAE,iCAACgB,aAAD,EAAmB;AACxCH,MAAAA,QAAQ,CAACb,wBAAuB,CAACgB,aAAD,CAAxB,CAAR;AACH,KATC;AASAjB,IAAAA,cAAc,EAAE,wBAACgB,OAAD,EAAa;AAC3BF,MAAAA,QAAQ,CAACd,eAAc,CAACgB,OAAD,CAAf,CAAR;AACH;AAXC,GAAN;AAaH;;AAED,SAASE,eAAT,CAAyBC,KAAzB,EAA+B;AAC3B,SAAM;AACFX,IAAAA,WAAW,EAACW,KAAK,CAACC,iBADhB;AAEFT,IAAAA,oBAAoB,EAACQ,KAAK,CAACR,oBAFzB;AAGFC,IAAAA,UAAU,EAACO,KAAK,CAACP;AAHf,GAAN;AAKH;;AAED,eAAeR,OAAO,CAACc,eAAD,EAAiBL,kBAAjB,CAAP,CAA4CR,GAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport AddBookComponent from './components/AddBookComponent';\nimport BookGalleryComponent from './components/BookGalleryComponent';\nimport AddEditFormComponent from './components/AddEditFormComponent';\nimport {updateBookItem, setUpdateFormVisibility, setUpdateItem} from '../actions';\nimport { getBookList } from './actions';\nimport {connect} from 'react-redux';\n\nimport './App.css';\nclass App extends Component {\n    \n    componentDidMount(){\n        this.props.getBookList();\n    }\n    \n    render() {\n        let blurEffect= this.props.showAddForm ? {filter: \"blur(5px)\", pointerEvents:\"none\"} : {}\n        return (\n          <div className=\"App\">\n            <h2>Good Reads Library</h2>\n            <AddBookComponent />\n            <div style={blurEffect}>\n                <BookGalleryComponent />\n            </div>\n            {this.props.updateFormVisibility ? \n                <AddEditFormComponent bookItem={this.props.updateItem} \n                                      updateBookItem={this.props.updateBookItem} \n                                      setFormVisibility={this.props.setUpdateFormVisibility}\n                                      formType=\"EDIT\"\n                                      />: false\n            }\n          </div>\n        );\n      }\n}\n\nfunction mapDispatchToProps(dispatch, ownProps){\n    return{\n        getBookList: () => {\n            dispatch(getBookList())\n        },\n        setUpdateItem: (bookObj) => {\n            dispatch(setUpdateItem(bookObj))\n        },\n        setUpdateFormVisibility: (visibilityInd) => {\n            dispatch(setUpdateFormVisibility(visibilityInd))\n        },updateBookItem: (bookObj) => {\n            dispatch(updateBookItem(bookObj))\n        },\n    }\n}\n\nfunction mapStateToProps(state){\n    return{\n        showAddForm:state.addFormVisibility,\n        updateFormVisibility:state.updateFormVisibility,\n        updateItem:state.updateItem,\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}