{"ast":null,"code":"import _regeneratorRuntime from \"/projects/library-app/client/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getBookList),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchgetBookList),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { put, takeEvery, all, call } from 'redux-saga/effects';\nimport { GET_BOOK_LIST } from './constants';\nimport axios from 'axios';\nexport function getBookList() {\n  var bookList;\n  return _regeneratorRuntime.wrap(function getBookList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return axios.get('/api/bookList');\n\n        case 2:\n          bookList = _context.sent;\n          _context.next = 5;\n          return put(bookList);\n\n        case 5:\n          console.log(bookList);\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this);\n} // Our watcher Saga: spawn a new incrementAsync task on each INCREMENT_ASYNC\n\nexport function watchgetBookList() {\n  return _regeneratorRuntime.wrap(function watchgetBookList$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(GET_BOOK_LIST, getBookList);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([watchgetBookList()]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, this);\n}","map":{"version":3,"sources":["/projects/library-app/client/src/sagas.js"],"names":["getBookList","watchgetBookList","rootSaga","put","takeEvery","all","call","GET_BOOK_LIST","axios","get","bookList","console","log"],"mappings":";;;;yBAIiBA,W;;;yBASAC,gB;;;yBAGQC,Q;;AAhBzB,SAASC,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,EAA8BC,IAA9B,QAA0C,oBAA1C;AACA,SAASC,aAAT,QAA8B,aAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAAUR,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACY,iBAAMQ,KAAK,CAACC,GAAN,CAAU,eAAV,CAAN;;AADZ;AACCC,UAAAA,QADD;AAAA;AAEL,iBAAMP,GAAG,CAACO,QAAD,CAAT;;AAFK;AAGLC,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AAHK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAQP;;AACA,OAAO,SAAUT,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMG,SAAS,CAACG,aAAD,EAAgBP,WAAhB,CAAf;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGP,eAAe,SAAUE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMG,GAAG,CAAC,CACPJ,gBAAgB,EADT,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { put, takeEvery, all, call } from 'redux-saga/effects'\r\nimport { GET_BOOK_LIST } from './constants';\r\nimport axios from 'axios';\r\n\r\nexport function* getBookList() {\r\n  const bookList = yield axios.get('/api/bookList')\r\n  yield put(bookList)\r\n  console.log(bookList) \r\n}\r\n\r\n\r\n\r\n// Our watcher Saga: spawn a new incrementAsync task on each INCREMENT_ASYNC\r\nexport function* watchgetBookList() {\r\n  yield takeEvery(GET_BOOK_LIST, getBookList);\r\n}\r\nexport default function* rootSaga() {\r\n  yield all([\r\n     watchgetBookList()\r\n  ])\r\n}"]},"metadata":{},"sourceType":"module"}